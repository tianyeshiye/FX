package ty.fx.macd.ea;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;

import ty.fx.bean.MaiMaiType;
import ty.fx.macd.MacdDataBean;
import ty.fx.macd.MacdResultBean;
import ty.fx.macd.Macds;
import ty.fx.utils.ExcelFileUtils;

public class Macd {

	private static final SimpleDateFormat dataFormat_yyyyMMddHHmmss = new SimpleDateFormat("yyyyMMddHHmmss");

	int win = 0;
	int lose = 0;
	float fuKui = 0;
	
	public List<String> ea(List<MacdDataBean> beanList, List<MacdResultBean> resulList) {

		List<String> outputList = new ArrayList<String>();

		float start = 0;
		float end = 0;

		for (int i = 0; i < beanList.size(); i++) {

			MacdDataBean before1Bean;
			MacdDataBean before2Bean;

			if (i == 0) {
				before1Bean = Macds.getNullBean();
				before2Bean = Macds.getNullBean();
			} else if (i == 1) {

				before1Bean = beanList.get(0);
				before2Bean = Macds.getNullBean();
			} else {
				before1Bean = beanList.get(i - 1);
				before2Bean = beanList.get(i - 2);
			}

			MacdDataBean currentBean = beanList.get(i);

			// fase 由 负 -> 正
			if ((currentBean.getDif() > 0 && before1Bean.getDif() == 0 && before2Bean.getDif() < 0)
					|| (currentBean.getDif() > 0 && before1Bean.getDif() < 0)) {

				if (start != 0) {
					// 已持有
					// 出场
					end = currentBean.getClose();

					BigDecimal jiesuanEnd = new BigDecimal(end).setScale(5, BigDecimal.ROUND_DOWN);
					BigDecimal jiesuanStart = new BigDecimal(start).setScale(5, BigDecimal.ROUND_DOWN);

					float jiesuan = jiesuanStart.subtract(jiesuanEnd).setScale(5, BigDecimal.ROUND_DOWN).floatValue();

					if (jiesuan >= 0) {
						// win
						win++;
						outputList.add("出 - 买," + currentBean.toString() + ",盈" + ",1");

						MacdResultBean macdResultBean = new MacdResultBean("出 - 买", "盈", jiesuan, currentBean);
						resulList.add(macdResultBean);

					} else {
						lose++;
						outputList.add("出 - 买," + currentBean.toString() + ",亏" + ",-1");

						MacdResultBean macdResultBean = new MacdResultBean("出 - 买", "亏", jiesuan, currentBean);
						resulList.add(macdResultBean);
					}

					fuKui = fuKui + jiesuan;
					outputList.add("总浮亏," + fuKui + ",本次结算," + String.valueOf(jiesuan));

				}
				// 进场 买入
				// start = currentBean.getClose();
				//
				// outputList.add("进 - 买," + currentBean.toString());
				jinChang(currentBean, MaiMaiType.JIN_Duo, outputList);
			}
			// fase 由 正 -> 负
			if ((currentBean.getDif() < 0 && before1Bean.getDif() == 0 && before2Bean.getDif() > 0)
					|| (currentBean.getDif() < 0 && before1Bean.getDif() > 0)) {

				if (start != 0) {
					// 已持有
					// 出场
					end = currentBean.getClose();

					BigDecimal jiesuanEnd = new BigDecimal(end).setScale(5, BigDecimal.ROUND_DOWN);
					BigDecimal jiesuanStart = new BigDecimal(start).setScale(5, BigDecimal.ROUND_DOWN);

					float jiesuan = jiesuanEnd.subtract(jiesuanStart).setScale(5, BigDecimal.ROUND_DOWN).floatValue();

					if (jiesuan >= 0) {
						// win
						win++;
						outputList.add("出 - 卖," + currentBean.toString() + ",盈" + ",1");

						MacdResultBean macdResultBean = new MacdResultBean("出 - 卖", "盈", jiesuan, currentBean);
						resulList.add(macdResultBean);
					} else {
						lose++;
						outputList.add("出 - 卖," + currentBean.toString() + ",亏" + ",-1");

						MacdResultBean macdResultBean = new MacdResultBean("出 - 卖", "亏", jiesuan, currentBean);
						resulList.add(macdResultBean);
					}

					fuKui = fuKui + jiesuan;
					outputList.add("总浮亏," + fuKui + ",本次结算," + String.valueOf(jiesuan));
				}
				// 进场 买入
				// start = currentBean.getClose();
				//
				// outputList.add("进 - 卖," + currentBean.toString());
				jinChang(currentBean, MaiMaiType.JIN_Kong, outputList);
			}

		}

		outputList.add("win," + win);
		outputList.add("lose," + lose);

		BigDecimal winR = new BigDecimal(win).setScale(0, BigDecimal.ROUND_DOWN);
		BigDecimal totalR = new BigDecimal(win + lose).setScale(0, BigDecimal.ROUND_DOWN);
		float rate = winR.divide(totalR, 2, BigDecimal.ROUND_DOWN).floatValue();

		outputList.add("rate," + rate);
		outputList.add("fuKui," + fuKui);

		System.out.println("win:" + win);
		System.out.println("lose:" + lose);
		System.out.println("rate:" + rate);
		System.out.println("fuKui:" + fuKui);

		return outputList;
	}

	private MacdDataBean jinChangBean = null;

	private MaiMaiType jinChangType = null; // "买， 卖"

	private void jinChang(MacdDataBean currentBean, MaiMaiType type, List<String> logList) {

		// 进场
		this.jinChangBean = currentBean;
		this.jinChangType = type;

		logList.add(type.getDesc() + "," + currentBean.toString());

		// switch (type) {
		// case JIN_Duo :
		// String a = "a";
		// break;
		// case JIN_kong :
		// String a = "a";
		// break;
		// }

	}

	private void chuChang(MacdDataBean currentBean, MaiMaiType type, List<String> logList, List<MacdResultBean> resulList) {

		// 已持有
		// 出场
		float start = jinChangBean.getClose();
		float end = currentBean.getClose();
		
		BigDecimal jiesuanStart = new BigDecimal(start).setScale(5, BigDecimal.ROUND_DOWN);
		BigDecimal jiesuanEnd = new BigDecimal(end).setScale(5, BigDecimal.ROUND_DOWN);
		
		float jiesuan = 0;

		switch (type) {
		case CHU_Duo:
			// 出 - 买
			jiesuan = jiesuanStart.subtract(jiesuanEnd).setScale(5, BigDecimal.ROUND_DOWN).floatValue();
			break;
		case CHU_Kong:
			// 出 - 卖
			jiesuan = jiesuanEnd.subtract(jiesuanStart).setScale(5, BigDecimal.ROUND_DOWN).floatValue();
			break;
		}

		if (jiesuan >= 0) {
			// win
			win++;
			logList.add(type.getDesc() + "," + currentBean.toString() + ",盈" + ",1");

			MacdResultBean macdResultBean = new MacdResultBean("出 - 卖", "盈", jiesuan, currentBean);
			resulList.add(macdResultBean);
		} else {
			lose++;
			logList.add(type.getDesc() + "," + currentBean.toString() + ",亏" + ",-1");

			MacdResultBean macdResultBean = new MacdResultBean("出 - 卖", "亏", jiesuan, currentBean);
			resulList.add(macdResultBean);
		}

		fuKui = fuKui + jiesuan;
		
		logList.add("总浮亏," + fuKui + ",本次结算," + String.valueOf(jiesuan));
	}

}
